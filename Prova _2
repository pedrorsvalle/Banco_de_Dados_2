Pedro Rodrigues Santos Valle
Matrícula : 01810422 


                                                                   PROVA 

                                                               -*-*-*-*-*-*-*-
                                                               BANCO DE DADOS - 2 
                                                               -*-*-*-*-*-*-*-


-*-*-*-* CÓDIGO DA CRIAÇÃO DA TABELA                                                              


SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

CREATE TABLE IF NOT EXISTS `prova_banco_de_dados`.`Venda` (
  `idVenda` INT(11) NOT NULL AUTO_INCREMENT,
  `dataVenda` DATETIME NULL DEFAULT NULL,
  `Cliente_idCliente` INT(11) NOT NULL,
  `Vendedor_idVendedor` INT(11) NOT NULL,
  PRIMARY KEY (`idVenda`),
  INDEX `fk_Venda_Cliente_idx` (`Cliente_idCliente` ASC) ,
  INDEX `fk_Venda_Vendedor1_idx` (`Vendedor_idVendedor` ASC) ,
  CONSTRAINT `fk_Venda_Cliente`
    FOREIGN KEY (`Cliente_idCliente`)
    REFERENCES `prova_banco_de_dados`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venda_Vendedor1`
    FOREIGN KEY (`Vendedor_idVendedor`)
    REFERENCES `prova_banco_de_dados`.`Vendedor` (`idVendedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE TABLE IF NOT EXISTS `prova_banco_de_dados`.`Vendedor` (
  `idVendedor` INT(11) NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NULL DEFAULT NULL,
  `cpf` VARCHAR(15) NULL DEFAULT NULL,
  PRIMARY KEY (`idVendedor`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE TABLE IF NOT EXISTS `prova_banco_de_dados`.`ItensVenda` (
  `idItensVenda` INT(11) NOT NULL AUTO_INCREMENT,
  `Venda_idVenda` INT(11) NOT NULL,
  `Produto_idProduto` INT(11) NOT NULL,
  PRIMARY KEY (`idItensVenda`),
  INDEX `fk_ItensVenda_Venda1_idx` (`Venda_idVenda` ASC) ,
  INDEX `fk_ItensVenda_Produto1_idx` (`Produto_idProduto` ASC) ,
  CONSTRAINT `fk_ItensVenda_Venda1`
    FOREIGN KEY (`Venda_idVenda`)
    REFERENCES `prova_banco_de_dados`.`Venda` (`idVenda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ItensVenda_Produto1`
    FOREIGN KEY (`Produto_idProduto`)
    REFERENCES `prova_banco_de_dados`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE TABLE IF NOT EXISTS `prova_banco_de_dados`.`Produto` (
  `idProduto` INT(11) NOT NULL AUTO_INCREMENT,
  `nomeProduto` VARCHAR(45) NULL DEFAULT NULL,
  `valorVenda` FLOAT(11) NULL DEFAULT NULL,
  `valorCompra` FLOAT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`idProduto`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*


                                                                        INSERIR VALORES NAS TABELAS 
                                                                        *-*-*-*-*-*-*-*-*-*-*-*-*-*


*-*-*-*-
Cliente: 
*-*-*-*-

insert into cliente (nome,cpf) values ('Duda','776.475.251-74');
insert into cliente (nome,cpf) values ('André','667.956.666-54');
insert into cliente (nome,cpf) values ('Rodolfo','824.554.954-18');
insert into cliente (nome,cpf) values ('Isabella','717.571.652-40');
insert into cliente (nome,cpf) values ('Matheus','732.814.977-99');



*-*-*-*-
 Venda: 
*-*-*-*-

insert into venda (cliente_idcliente ,vendedor_idvendedor,dataVenda)
values('1','2',NOW());

insert into venda (cliente_idcliente ,vendedor_idvendedor, dataVenda)
values('2','3',NOW());

insert into venda (cliente_idcliente ,vendedor_idvendedor, dataVenda)
VALUES('3','1',NOW());

insert into venda (cliente_idcliente ,vendedor_idvendedor, dataVenda)
values('4','5',NOW());

insert into venda (cliente_idcliente ,vendedor_idvendedor, dataVenda)
values('5','4',NOW());


*-*-*-*-
Vendedor:
*-*-*-*-

insert into Vendedor (nome,cpf) values('Maria','776.474.251-34');
insert into Vendedor (nome,cpf) values('Vitória','667.986.666-04');
insert into Vendedor (nome,cpf) values('Felipe','824.554.954-07');
insert into Vendedor (nome,cpf) values('Gabi','717.871.652-17');
insert into Vendedor (nome,cpf) values('Pedro','732.864.977-53');

*-*-*-*-*-
ItensVenda:
*-*-*-*-*-

insert into ItensVenda(venda_idvenda , produto_idproduto)
values('1','5');
insert into ItensVenda (venda_idvenda , produto_idproduto)
values('2','4');
insert into ItensVenda (venda_idvenda , produto_idproduto)
values('3','3');
insert into ItensVenda (venda_idvenda , produto_idproduto)
values('4','2');
insert into ItensVenda (venda_idvenda , produto_idproduto)
values('5','1');

*-*-*-*-
Produto:
*-*-*-*-

insert into Produto (nomeProduto,valorVenda,valorCompra) values('Geladeira','12000','8000');
insert into Produto (nomeProduto,valorVenda,valorCompra) values('Máquina de lavar louça','5500','3500');
insert into Produto (nomeProduto,valorVenda,valorCompra) values('Sapato','300','150');
insert into Produto (nomeProduto,valorVenda,valorCompra) values('microondas','6000','5000');
insert into Produto (nomeProduto,valorVenda,valorCompra) values('Cerveja','50','20');

   
    PERGUNTAS:

1. Construa uma consulta utilizando joins que:

a. Selecione e apresente todos os itens das vendas juntamente com o nome do
produto, nome do vendedor e nome do cliente. Ordene os dados em ordem
alfabética.


testessss 

SELECT * FROM itensvenda , produto ,cliente,vendedor
WHERE venda_idVenda = produto.idProduto
  



select * from itensvenda , produto ,cliente
where venda_idvenda= produto.idProduto
      
select  * from itensvenda
join produto on Produto_idProduto =itensvenda.Produto_idProduto
join cliente on cliente.idCliente = cliente.idCliente
order by cliente.nome


select  * from itensvenda
join produto on Produto_idProduto =itensvenda.Produto_idProduto
join cliente on cliente.idCliente = cliente.idCliente
order by cliente.nome

*-*







b. Inclua na consulta do item a os clientes que nunca efetuaram uma venda.






















